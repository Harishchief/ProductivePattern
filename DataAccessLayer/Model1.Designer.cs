//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LinkSmartzModel", "FK_User_ContactInfo", "ContactInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.ContactInfo), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.User), true)]

#endregion

namespace DataAccessLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class LinkSmartzEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new LinkSmartzEntities object using the connection string found in the 'LinkSmartzEntities' section of the application configuration file.
        /// </summary>
        public LinkSmartzEntities() : base("name=LinkSmartzEntities", "LinkSmartzEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LinkSmartzEntities object.
        /// </summary>
        public LinkSmartzEntities(string connectionString) : base(connectionString, "LinkSmartzEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LinkSmartzEntities object.
        /// </summary>
        public LinkSmartzEntities(EntityConnection connection) : base(connection, "LinkSmartzEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactInfo> ContactInfoes
        {
            get
            {
                if ((_ContactInfoes == null))
                {
                    _ContactInfoes = base.CreateObjectSet<ContactInfo>("ContactInfoes");
                }
                return _ContactInfoes;
            }
        }
        private ObjectSet<ContactInfo> _ContactInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Department> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Department>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Department> _Departments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactInfoes(ContactInfo contactInfo)
        {
            base.AddObject("ContactInfoes", contactInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Departments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartments(Department department)
        {
            base.AddObject("Departments", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LinkSmartzModel", Name="ContactInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactInfo object.
        /// </summary>
        /// <param name="contactInfoId">Initial value of the ContactInfoId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        public static ContactInfo CreateContactInfo(global::System.Int32 contactInfoId, global::System.String firstName)
        {
            ContactInfo contactInfo = new ContactInfo();
            contactInfo.ContactInfoId = contactInfoId;
            contactInfo.FirstName = firstName;
            return contactInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactInfoId
        {
            get
            {
                return _ContactInfoId;
            }
            set
            {
                if (_ContactInfoId != value)
                {
                    OnContactInfoIdChanging(value);
                    ReportPropertyChanging("ContactInfoId");
                    _ContactInfoId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactInfoId");
                    OnContactInfoIdChanged();
                }
            }
        }
        private global::System.Int32 _ContactInfoId;
        partial void OnContactInfoIdChanging(global::System.Int32 value);
        partial void OnContactInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LinkSmartzModel", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Department CreateDepartment(global::System.Int32 departmentId, global::System.String name)
        {
            Department department = new Department();
            department.DepartmentId = departmentId;
            department.Name = name;
            return department;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                if (_DepartmentId != value)
                {
                    OnDepartmentIdChanging(value);
                    ReportPropertyChanging("DepartmentId");
                    _DepartmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DepartmentId");
                    OnDepartmentIdChanged();
                }
            }
        }
        private global::System.Int32 _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Int32 value);
        partial void OnDepartmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LinkSmartzModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="contactInfoId">Initial value of the ContactInfoId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.Int32 contactInfoId, global::System.String userName)
        {
            User user = new User();
            user.UserId = userId;
            user.ContactInfoId = contactInfoId;
            user.UserName = userName;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactInfoId
        {
            get
            {
                return _ContactInfoId;
            }
            set
            {
                OnContactInfoIdChanging(value);
                ReportPropertyChanging("ContactInfoId");
                _ContactInfoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactInfoId");
                OnContactInfoIdChanged();
            }
        }
        private global::System.Int32 _ContactInfoId;
        partial void OnContactInfoIdChanging(global::System.Int32 value);
        partial void OnContactInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LinkSmartzModel", "FK_User_ContactInfo", "ContactInfo")]
        public ContactInfo ContactInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactInfo>("LinkSmartzModel.FK_User_ContactInfo", "ContactInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactInfo>("LinkSmartzModel.FK_User_ContactInfo", "ContactInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContactInfo> ContactInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContactInfo>("LinkSmartzModel.FK_User_ContactInfo", "ContactInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContactInfo>("LinkSmartzModel.FK_User_ContactInfo", "ContactInfo", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
